(Only for Complex Queries)

--Query the Name of any student in STUDENTS who scored higher than  Marks. 
--Order your output by the last three characters of each name. 
--If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.
SELECT Name
FROM STUDENTS
WHERE Marks > 75  
ORDER BY RIGHT(Name,3), ID ASC


--Ketty gives Eve a task to generate a report containing three columns: Name, Grade and Mark. 
--Ketty doesn't want the NAMES of those students who received a grade lower than 8. 
--The report must be in descending order by grade -- i.e. higher grades are entered first. 
--If there is more than one student with the same grade (8-10) assigned to them, order those particular students by their name alphabetically. 
--Finally, if the grade is lower than 8, use "NULL" as their name and list them by their grades in descending order. 
--If there is more than one student with the same grade (1-7) assigned to them, order those particular students by their marks in ascending order.
Wr--ite a query to help Eve.

SELECT 
    CASE
        WHEN Grade < 8
        THEN 'NULL'
        ELSE Name
    END,
    Grade, Marks
FROM Students JOIN Grades
ON Marks >= Min_Mark AND Max_Mark >= Marks
ORDER BY Grade DESC, Name ASC

--Harry Potter and his friends are at Ollivander's with Ron, finally replacing Charlie's old broken wand.
--Hermione decides the best way to choose is by determining the minimum number of gold galleons needed to buy each non-evil wand of high power and age. 4
--Write a query to print the id, age, coins_needed, and power of the wands that Ron's interested in, sorted in order of descending power. 
--If more than one wand has same power, sort the result in order of descending age.

WITH temp AS (
    SELECT id, age, coins_needed, power,
        rank() OVER(PARTITION BY power, age ORDER BY coins_needed) as rnk
FROM Wands w JOIN Wands_Property wp
ON w.code = wp.code
WHERE is_evil = 0)

SELECT id, age, coins_needed, power
FROM temp
WHERE rnk = 1
ORDER BY power DESC, age DESC;
